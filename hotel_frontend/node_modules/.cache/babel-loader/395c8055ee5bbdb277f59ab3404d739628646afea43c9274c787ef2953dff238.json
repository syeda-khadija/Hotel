{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asp\\\\Documents\\\\GitHub\\\\Hotel\\\\hotel_frontend\\\\src\\\\WEB\\\\Resetpassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Resetpassword() {\n  _s();\n  const [pswd, setPswd] = useState(\"\");\n  const [cpswd, setCpswd] = useState(\"\");\n  const {\n    token\n  } = useParams();\n  let nav = useNavigate();\n  async function handleResetPassword() {\n    if (!pswd || !cpswd) {\n      toast.error(\"Both fields are required\");\n      return;\n    }\n    if (pswd !== cpswd) {\n      toast.error(\"Passwords do not match\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:3007/${token}`, {\n        password: pswd\n      });\n      toast.success(response.data.msg || \"Password reset successful\");\n      setPswd(\"\");\n      setCpswd(\"\");\n      nav(\"/log_exb\");\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMsg = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.msg) || \"Something went wrong\";\n      toast.error(errorMsg);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-5\",\n      style: {\n        maxWidth: '500px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4\",\n        children: \"Reset Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter new password\",\n        className: \"form-control my-2\",\n        value: pswd,\n        onChange: e => setPswd(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm password\",\n        className: \"form-control my-2\",\n        value: cpswd,\n        onChange: e => setCpswd(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary my-2\",\n        onClick: handleResetPassword,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Resetpassword, \"aDafUm0b3FlwmRZa6SYq12F7MBk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Resetpassword;\nvar _c;\n$RefreshReg$(_c, \"Resetpassword\");","map":{"version":3,"names":["React","useState","axios","ToastContainer","toast","useNavigate","useParams","jsxDEV","_jsxDEV","Resetpassword","_s","pswd","setPswd","cpswd","setCpswd","token","nav","handleResetPassword","error","response","post","password","success","data","msg","_error$response","_error$response$data","errorMsg","children","className","style","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/asp/Documents/GitHub/Hotel/hotel_frontend/src/WEB/Resetpassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nexport default function Resetpassword() {\r\n    const [pswd, setPswd] = useState(\"\");\r\n    const [cpswd, setCpswd] = useState(\"\");\r\n    const { token } = useParams();\r\nlet nav = useNavigate();\r\n    async function handleResetPassword() {\r\n        if (!pswd || !cpswd) {\r\n            toast.error(\"Both fields are required\");\r\n            return;\r\n        }\r\n\r\n        if (pswd !== cpswd) {\r\n            toast.error(\"Passwords do not match\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post(`http://localhost:3007/${token}`, { password: pswd });\r\n            toast.success(response.data.msg || \"Password reset successful\");\r\n            setPswd(\"\");\r\n            setCpswd(\"\");\r\n            nav(\"/log_exb\");\r\n        } catch (error) {\r\n            const errorMsg = error.response?.data?.msg || \"Something went wrong\";\r\n            toast.error(errorMsg);\r\n        }\r\n    }\r\n  return (\r\n    <div>\r\n          <div className='container my-5' style={{ maxWidth: '500px' }}>\r\n                <h2 className='mb-4'>Reset Your Password</h2>\r\n                \r\n                <label>New Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Enter new password\"\r\n                    className='form-control my-2'\r\n                    value={pswd}\r\n                    onChange={(e) => setPswd(e.target.value)}\r\n                />\r\n\r\n                <label>Confirm Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    className='form-control my-2'\r\n                    value={cpswd}\r\n                    onChange={(e) => setCpswd(e.target.value)}\r\n                />\r\n\r\n                <button className='btn btn-primary my-2' onClick={handleResetPassword}>\r\n                    Reset Password\r\n                </button>\r\n\r\n                <ToastContainer />\r\n            </div>\r\n            {/* <Footer /> */}\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}